use amazon;
drop table if exists inventory_health;
create table inventory_health(
      id INT NOT NULL AUTO_INCREMENT,
`snapshot-date` varchar(135),
`sku` varchar(135),
`fnsku` varchar(135),
`asin` varchar(135),
`product-name` varchar(355),
`condition` varchar(135),
`sales-rank` varchar(135),
`product-group` varchar(135),
`total-quantity` varchar(135),
`sellable-quantity` varchar(135),
`unsellable-quantity` varchar(135),
`inv-age-0-to-90-days` varchar(135),
`inv-age-91-to-180-days` varchar(135),
`inv-age-181-to-270-days` varchar(135),
`inv-age-271-to-365-days` varchar(135),
`inv-age-365-plus-days` varchar(135),
`units-shipped-last-24-hrs` varchar(135),
`units-shipped-last-7-days` varchar(135),
`units-shipped-last-30-days` varchar(135),
`units-shipped-last-90-days` varchar(135),
`units-shipped-last-180-days` varchar(135),
`units-shipped-last-365-days` varchar(135),
`weeks-of-cover-t7` varchar(135),
`weeks-of-cover-t30` varchar(135),
`weeks-of-cover-t90` varchar(135),
`weeks-of-cover-t180` varchar(135),
`weeks-of-cover-t365` varchar(135),
`num-afn-new-sellers` varchar(135),
`num-afn-used-sellers` varchar(135),
`currency` varchar(135),
`your-price` varchar(135),
`sales-price` varchar(135),
`lowest-afn-new-price` varchar(135),
`lowest-afn-used-price` varchar(135),
`lowest-mfn-new-price` varchar(135),
`lowest-mfn-used-price` varchar(135),
`qty-to-be-charged-ltsf-12-mo` varchar(135),
`qty-in-long-term-storage-program` varchar(135),
`qty-with-removals-in-progress` varchar(135),
`projected-ltsf-12-mo` varchar(135),
`per-unit-volume` varchar(135),
`is-hazmat` varchar(135),
`in-bound-quantity` varchar(135),
`asin-limit` varchar(135),
`inbound-recommend-quantity` varchar(135),
`qty-to-be-charged-ltsf-6-mo` varchar(135),
`projected-ltsf-6-mo` varchar(135),  
PRIMARY KEY (id)
);
